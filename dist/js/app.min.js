/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/functions.js */ \"./src/js/modules/functions.js\");\n/* harmony import */ var _modules_menu_burger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/menu-burger.js */ \"./src/js/modules/menu-burger.js\");\n/* harmony import */ var _modules_onlyOneSpoiler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/onlyOneSpoiler.js */ \"./src/js/modules/onlyOneSpoiler.js\");\n\r\n\r\n\r\n\r\n\r\nlet burgerBtn = document.querySelector(\".header__burger\");\r\nlet menu = document.querySelector(\".header__buttons\")\r\n\r\n;(0,_modules_menu_burger_js__WEBPACK_IMPORTED_MODULE_1__.burger)(burgerBtn, menu);\r\n\r\n\r\nlet accordions = document.querySelectorAll(\".category\");\r\nconsole.log(document.documentElement.offsetWidth)\r\nif (document.documentElement.offsetWidth < 768){\r\n  (0,_modules_onlyOneSpoiler_js__WEBPACK_IMPORTED_MODULE_2__.InitSpoiler)(accordions);\r\n}\n\n//# sourceURL=webpack://going/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/functions.js":
/*!*************************************!*\
  !*** ./src/js/modules/functions.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sum\": () => (/* binding */ sum)\n/* harmony export */ });\nfunction sum(a, b){\r\n  return a + b;\r\n}\n\n//# sourceURL=webpack://going/./src/js/modules/functions.js?");

/***/ }),

/***/ "./src/js/modules/menu-burger.js":
/*!***************************************!*\
  !*** ./src/js/modules/menu-burger.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"burger\": () => (/* binding */ burger)\n/* harmony export */ });\nfunction burger(burgerBtn, menu){\r\n  let body = document.querySelector('body')\r\n\r\n  burgerBtn.addEventListener(\"click\", function(){\r\n    burgerBtn.classList.toggle(\"header__burger_active\")\r\n    menu.classList.toggle(\"header__buttons_active\")\r\n    body.classList.toggle(\"freeze\")\r\n  });\r\n}\r\n\r\n\n\n//# sourceURL=webpack://going/./src/js/modules/menu-burger.js?");

/***/ }),

/***/ "./src/js/modules/onlyOneSpoiler.js":
/*!******************************************!*\
  !*** ./src/js/modules/onlyOneSpoiler.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InitSpoiler\": () => (/* binding */ InitSpoiler)\n/* harmony export */ });\n/* ----------------------------------------------------------\r\n * Для використання одиничного спойлера потрібно створити структуру:\r\n * - спойлер\r\n *   - заголовок спойлера\r\n *   - тіло спойлера (буде зменшуватись)\r\n *     - контент спойлера (задає висоту тіла)\r\n *       + елемент контената 1\r\n *       + елемент контената 2\r\n *       + елемент контената N\r\n * \r\n * Для використання пов'язаних спойлерів (акордеон)\r\n * - блок для спойлерів акордеону \r\n *   - спойлер 1\r\n *     - заголовок спойлера\r\n *     - тіло спойлера (буде зменшуватись)\r\n *       - контент спойлера (задає висоту тіла)\r\n *         + елемент контената 1\r\n *         + елемент контената 2\r\n *         + елемент контената N\r\n *   + спойлер 2\r\n *   + спойлер N\r\n * ----------------------------------------------------------\r\n * Один або колекцію спойлерів передаємо в OnlyOneSpoiler\r\n * Колекція пов'язує групу спойлерів, які відкриваються по-черзі\r\n */\r\n\r\nfunction InitSpoiler(spoiler){\r\n  // for iterable structures ----------------------------------------\r\n  if (spoiler[Symbol.iterator] != undefined){\r\n    spoiler.forEach(block => {\r\n      prepareSpoiler(block);\r\n\r\n      block.children[0].addEventListener('click', function(event){\r\n        if (block.classList.contains('_opened')){\r\n          closeSpoiler(block)\r\n        } else {\r\n          spoiler.forEach(item => {\r\n            if (item.classList.contains('_opened')){\r\n              closeSpoiler(item)\r\n              console.log('closed')\r\n            }\r\n          });\r\n          openSpoiler(block)\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // for not iterable structures -------------------------------------\r\n  else {\r\n    prepareSpoiler(spoiler);\r\n\r\n    spoiler.children[0].addEventListener('click', function(event){\r\n      if (spoiler.classList.contains('_opened')){\r\n        closeSpoiler(spoiler);\r\n      } else {\r\n        openSpoiler(spoiler);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction prepareSpoiler(spoiler, contentHeight){\r\n  // hide content in closed spoilers\r\n  spoiler.children[1].style.overflow = 'hidden';\r\n\r\n  // do have _opened class?\r\n  if (spoiler.classList.contains('_opened')){\r\n    spoiler.children[1].style.height = String(spoiler.children[1].children[0].offsetHeight) + 'px';\r\n  } else {\r\n    spoiler.children[1].style.height = 0;\r\n  }\r\n}\r\n\r\n\r\nfunction openSpoiler(spoiler, contentHeight=0){\r\n  spoiler.classList.add('_opened');\r\n  spoiler.children[1].style.height = String(spoiler.children[1].children[0].offsetHeight) + 'px';\r\n}\r\n\r\n\r\nfunction closeSpoiler(spoiler){\r\n  spoiler.classList.remove('_opened');\r\n  spoiler.children[1].style.height = '0';\r\n}\n\n//# sourceURL=webpack://going/./src/js/modules/onlyOneSpoiler.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;